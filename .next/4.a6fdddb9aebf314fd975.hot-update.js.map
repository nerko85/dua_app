{"version":3,"file":"4.a6fdddb9aebf314fd975.hot-update.js","sources":["webpack:///components/HijriCalendar/HijriCalendar.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Calendar, Badge } from 'antd';\r\n\r\nexport default class HijriCalendar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            prayers: []\r\n        }\r\n\r\n        this.dateCellRender = this.dateCellRender.bind(this)\r\n    }\r\n\r\n    fetch(){\r\n        const now = new Date();\r\n        const year = now.getFullYear();\r\n        const month = now.getMonth() + 2;\r\n\r\n        console.log(month)\r\n        const endpoint = `http://api.aladhan.com/v1/calendar?latitude=44.206583&longitude=17.906376&method=2&month=${month}&year=${year}`;\r\n\r\n        fetch(endpoint).then(blob => blob.json()).then(resp => this.setState({\r\n            prayers: resp.data\r\n        }))\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetch()\r\n    }\r\n\r\n    getListData(value) {\r\n        let listData;\r\n        \r\n        switch (value.date()) {\r\n          case 8:\r\n            listData = [\r\n              { type: 'warning', content: 'This is warning event.' },\r\n              { type: 'success', content: 'This is usual event.' },\r\n            ]; break;\r\n          case 10:\r\n            listData = [\r\n              { type: 'warning', content: 'This is warning event.' },\r\n              { type: 'success', content: 'This is usual event.' },\r\n              { type: 'error', content: 'This is error event.' },\r\n            ]; break;\r\n          case 15:\r\n            listData = [\r\n              { type: 'warning', content: 'This is warning event' },\r\n              { type: 'success', content: 'This is very long usual event。。....' },\r\n              { type: 'error', content: 'This is error event 1.' },\r\n              { type: 'error', content: 'This is error event 2.' },\r\n              { type: 'error', content: 'This is error event 3.' },\r\n              { type: 'error', content: 'This is error event 4.' },\r\n            ]; break;\r\n          default:\r\n        }\r\n        return listData || [];\r\n      }\r\n      \r\n      dateCellRender(value) {\r\n        const listData = this.getListData(value);\r\n        return (\r\n          <ul className=\"events\">\r\n            {\r\n              listData.map(item => (\r\n                <li key={item.content}>\r\n                  <Badge status={item.type} text={item.content} />\r\n                </li>\r\n              ))\r\n            }\r\n          </ul>\r\n        );\r\n      }\r\n      \r\n      getMonthData(value) {\r\n        if (value.month() === 8) {\r\n          return 1394;\r\n        }\r\n      }\r\n      \r\n      monthCellRender(value) {\r\n        const num = getMonthData(value);\r\n        return num ? (\r\n          <div className=\"notes-month\">\r\n            <section>{num}</section>\r\n            <span>Backlog number</span>\r\n          </div>\r\n        ) : null;\r\n      }\r\n\r\n    render() {\r\n        console.log(this.state.prayers)\r\n        return (\r\n            <div>\r\n                 <Calendar dateCellRender={this.dateCellRender} monthCellRender={this.monthCellRender} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// components/HijriCalendar/HijriCalendar.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAIA;AANA;AAOA;AACA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AArBA;AACA;AAsBA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA9FA;AACA;;;;;A","sourceRoot":""}